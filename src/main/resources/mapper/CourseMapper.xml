<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.omoi.mapper.CourseMapper">
    <sql id="all_field">
        select course_id,
               course_name,
               course_date,
               course_address,
               course_times,
               course_type,
               course_point,
               course.teacher_id teacherId,
               course_belong,
               academy_name,
               teacher_name
        from course
                 left join academy on course.course_belong = academy_id
                 left join teacher t on course.teacher_id = t.teacher_id
    </sql>
    <insert id="addNewCourse">
        insert into course
        values (#{courseId}, #{courseName}, #{courseDate}, #{courseAddress}, #{courseTimes}, #{courseType},
                #{coursePoint}, #{teacherId}, #{courseBelong})
    </insert>
    <update id="editCourse">
        update course
        set course_name    = #{courseName},
            course_date    = #{courseDate},
            course_address = #{courseAddress},
            course_times   = #{courseTimes},
            course_type    = #{courseType},
            course_point   = #{coursePoint},
            teacher_id     = #{teacherId},
            course_belong  = #{courseBelong}
        where course_id = #{courseId}
    </update>
    <delete id="deleteCourseById">
        delete
        from course
        where course_id = #{courseId}
    </delete>

    <select id="getAllCourses" resultType="com.omoi.entity.Course">
        <include refid="all_field"/>
    </select>
    <select id="getCourseById" resultType="com.omoi.entity.Course">
        <include refid="all_field"/>
        where course_id = #{courseId}
    </select>
    <select id="getCourseByTeacherId" resultType="com.omoi.entity.Course">
        <include refid="all_field"/>
        <where>
            <if test="teacherId != null and teacherId != 0">
                and teacher_id = #{teacherId}
            </if>
            <if test="courseName != null and courseName != ''">
                and course_name like '%'||#{courseName}||'%'
            </if>
        </where>
    </select>
    <select id="getAllCourseWithStudent" resultType="com.omoi.entity.Course">
        select course_id,
        course_name,
        course_date,
        course_address,
        course_times,
        course_type,
        course_point,
        course.teacher_id teacherId,
        course_belong,
        academy_name,
        teacher_name,
        iif(course_id in (select course_id from score where student_id = #{studentId}), 1, 0) selected
        from course left join academy on course_belong = academy_id left join teacher t on course.teacher_id =
        t.teacher_id
        <where>
            <if test="name != null and name != ''">
                course_name like '%'||#{name}||'%'
            </if>
        </where>
    </select>
    <select id="getAllSelectedCourse" resultType="com.omoi.entity.Course">
        select c.course_id courseId,
        course_name,
        course_date,
        course_address,
        course_times,
        course_type,
        course_point,
        c.teacher_id teacherId,
        course_belong,
        academy_name,
        teacher_name
        <if test="complete != null">
            , s.score score
        </if>
        from course c
        left join score s on c.course_id = s.course_id left join academy on course_belong = academy_id left join teacher
        t on c.teacher_id = t.teacher_id
        where s.student_id = #{studentId}
        <choose>
            <when test="complete == null">
                and s.score = ''
            </when>
            <otherwise>
                and s.score != ''
            </otherwise>
        </choose>

    </select>
</mapper>